<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/4QB2RXhpZgAATU0AKgAAAAgAAYdpAAQAAAABAAAAGgAAAAAAAZKG
        AAcAAABCAAAALAAAAABVTklDT0RFAABDAG8AbQBwAHIAZQBzAHMAZQBkACAAYgB5ACAAagBwAGUAZwAt
        AHIAZQBjAG8AbQBwAHIAZQBzAHP/2wBDABQUFBQVFBcZGRcfIh4iHy4rJycrLkYyNjI2MkZqQk5CQk5C
        al5yXVZdcl6phXZ2hanDpJukw+zT0+z/////////2wBDARQUFBQVFBcZGRcfIh4iHy4rJycrLkYyNjI2
        MkZqQk5CQk5Cal5yXVZdcl6phXZ2hanDpJukw+zT0+z/////////wgARCAJYB4ADASIAAhEBAxEB/8QA
        GAABAQEBAQAAAAAAAAAAAAAAAAECBAb/2gAIAQEAAAAA9YAAACAACAAACgEAAEgAEgAAAAACipAAQIAC
        AAAACAAAAAA6gAAAIAAQAAAKAgABIAAkAAAAAABSBBAAAQAAAAEAAAAAB1AAAAQABAAAAUBAAGQABIAA
        AAAAASAAAAgAAAACAAAAAA6gAAAIAAgAAAKAgAGQAAkAAAAAAAZSgAACAAAAAEAAAAAB1AAAAIABAAAA
        KBAAkAABIAAAAAACZCgAAQAAAAAIAAAAADpoAAAEABAAAACggAkAAAkAAAAAADMAUAAgAAAAAEAAAAAB
        0UoAAAQAIAAAAKEAJAAAEgAAAAAAzABQAQAAAAAAgAAAAAk6hVAAAIAIAAAAFCAMgAACQAAAAABMgAUA
        gAAAAAAQAAAABMnWClAAAgBAAAAAUQDIAAASAAAAAAZgAAoIAAAAAACAAAAAmQ6wClAAEAQAAAACkBIA
        AACQAAAAAJkAACkAAAAAAAQAAAAZgHWACqAAQCAAAAAKgSAAAASAAAAADMAAAAAAAAAAAgAAADMATsAA
        UoAIBAAAAACwSAAAAJAAAAADMAAAEBQAAAAABAAAAkgAz2gABSgEBAAAAABYSAAAAEgAAAAEyAAACACg
        AAAAAgAABJAAZ7QAAFUBAgAAAAAGQAAAAkAAAABmAAAAQACgAAAAEAAAkgAEnaAAAKUIIAAAAABkAAAA
        EgAAAAkgAAACAABQAAAAgAATIAAy7QAAAKUhAAAAAghFAAAACQAAAAmQAAABAAACgAAAQAAmQAAkdoAA
        AAoQAAQIQACLQAAABIAAAAzAAAAAgAAAFAAAIABmAAASO0AAAAFIQQQAAABBaAAAAkAAABMgAAAAQAAA
        AKAACADMAAAMnaAAAAAwAAAAAAgWgAAASAAABmAAAAAIAAAAAUABAJIAAAJDtAAAABJmgAAAAAQC0AAA
        JAAABmAAAAAEAAAAABQAgSQAAAGR2gAAABlIoAAAAAIAtAAAGQAACZAAAAACAAAAAACgQkgAAADI7QAA
        ABkkKAAAAAEAKoAACQAADMAAAAABAAAAAAAFJMgAAACQdoAAABkSFAAAAACABaAABIAAEyAAAAAAgAAA
        AAAAmQAAAAZDtAAAAkDIUAAAAAQADQAAMgABmAAAAAAEAAAAAAATIAAAAEgdoAAAJAZBQAAAACAALQAB
        kAAZgAAAAAAgAAAAAAJIAAAAAyDtAAADIEgKAAAAAQAAqgAMgAJkAAAAAAEAAAAAADMAAAAAGQdoAAAy
        AkAoAAAAEAABaABkADMAAAAAAAgAAAAABMgAAAABIDtAAASAGQCgAAAAgAAFoAMgBMgAAAAAAIAAAAAA
        kgAAAAAMgdoAAEgAyAUAAAAEAAALQBkAZgAAAAAABAAAAAASQAAAAABkDtAABkAJABQAAAAgAAAtAMgG
        YAAAAAAAIAAAAAGYAAAAAASAdoAAZABIAFAAAAEAAABaCQCZAAAAAAABAAAAACZAAAAAADIDtAAJAAJA
        AoAAAAgAAAFoSAzAAAAAAAAIAAAABJAAAAAAAkAdoACQABkACgAAAEAAAALSQSQAAAAAAABAAAAAZgAA
        AAAAGQDtAAyAASAAKAAAAgAAAAtSEyAAAAAAAAIAAAAJkAAAAAAAyAdoAMgACQABQAAAEAAAACkZgAAA
        AAAAAQAAABJAAAAAAACQA7QBIAAEgABQAAAIAAAABc5AAAAAAAAAgAAAGYAAAAAAAGQB2gEgAAMgABQA
        AAQAAAADMAAAAAAAAAQAAAJkAAAAAAAEgA7QGQAAJAAAUAAAIAAAADMgoAAAAAAAAgAABMgAAAAAAAJA
        B2gZAAASAAAoAAAQAAAAMwgFAAAAAAABAAAJIAAAAAAAAZADtCQAAAkAAAoAAAgAAAAzBAAoAAAAAACA
        AAzAAAAAAAABIAHaJAAABkAAAoAABAAAADMBAAFAAAAAAEAAEyAAAAAAAADIAO0yAAADIAABQAACAAAA
        MwCAAAoAAAAAIAAkgAAAAAAAAGQAdrIAAAJAAABQAAEAAAAzACAAAKAAAAAQADMAAAAAAAAASAA7IAAA
        BIAAAFAABAAAASQAQAAAFAAAACABMgAAAAAAAADIAHWAAAAyAAACgAAgAAASQAEAAAAKAAABACSAAAAA
        AAAACQADrAAAAZAAAAoAAQAAASQACAAAAAUAAAgEkAAAAAAAAABIAB1gAAASAAAAKAAIAAASQABAAAAA
        AoAAQEyAAAAAAAAAAyAA6wAAAJAAAAFAAEAAASQAAQAAAAACgAuQmQAAAAAAAAACQAB1gAAASAAAAFAA
        IAABJAAAgAAAAAAUBckkAAAAAAAAAAGQADrAAAAyAAAAFAAQAAEkAAAgAAAAAAChGYAAAAAAAAAADIAB
        1gAAAkAAAACgAIAAEkAAAQAAAAAAAKzkAAAAAAAAAACQAA6wAAASAAAAAoAEAAEyAAAEAAAAAAAImQAF
        AAAAAAAABkAAdYAAAJAAAAAKACAAEyAAACAAAAAABCEgAAAAUAAAAABIAAOsAAAGQAAAAFABAAEyAAAB
        AAAAAAEQEQAAAAAACgAAAyAAHWAAADIAAAABQAgAEyAAAAQAAAAAhACEAAAAAAAAAKAZAADrAAACQAAA
        AAUAQAEyAAAAIAAAACIACCAAAAAAAAAABmgAB1gAABIAAAAAKAIAEyAAAACAAAAQgACBAAAAAAAAAADM
        LQADrAAADIAAAAAKAQATIAAAAEAAAEQAAIBAAAAAAAAAATJFtAAdVAAAGQAAAAAKBABMgAAAAEAACIAA
        AgCAAAAAAAAACSCC6AA6bQAAEgAAAAAFAgBMgAAAACAAQgAAAQBAAAAAAAAADMBAugAdJoAACQAAAAAB
        QQBMgAAAABABEAAAAQAgAAAAAAAAEyAgLaAOkWgABkAAAAAAUIBMgAAAAAQIgAAAAQAIAAAAAAAAJIAQ
        BqgHSFoAAyAAAAAAKEBMgAAAAAJCAAAAAQAEAAAAAAAASQAIAXQDpBaAAkAAAAAACiBMgAAAAAJhQAAA
        ACAAgAAAAAAAEyABABdAdIC0AEgAAAAAAKQZgAAAACAkgoAAAAIAAgAAAAAAAmQAEABbQ6QC0AJAAAAA
        AAUhmAAAAQACQyVQAAACAAEAAAAAAASQAAgADVHSALQBkAAAAAABUZgAAIAAAyEhVAAAAgAAgAAAAAAG
        YAAEAALo6QAaASAAAAAAAFmYAEAAAAMgkCqAAAEAAEAAAAAACZAAAgAAtvSABaCQAAAAAAAZgQAAAABI
        BIBVAAAQAAIAAAAAASQAABAAAa6gAFoSAAAAAAIERAAAAAAZAJAFUAAEAAAgAAAAAJIAAAIAAB2AAFoy
        AAAAIBAECAAAAABkAMgCqAASUAAEAAAAADMAAABAAAOwAANGQAAQEAAEAIAAAAAkABIAFUABkoAAgAAA
        ABJAAAAQAAB2AAAqAICAAAAgAQAAAACQACQAFUACQoABAAAAAJIAAAAgAAE7QAAEEAAAAAgABAAAAAyA
        ASAAKoAMigAEAAAADMAAAAEAAAz3AAAiAAAAAIAACAAAADIAAZAAFUASBQAIAAAATIAAAAIAACT/xAAW
        AQEBAQAAAAAAAAAAAAAAAAAAAQL/2gAIAQIQAAAA0AAAABQAKAAAAACgAAAAADAAAAAFABQAAAAKAAAA
        AAAMAAAAAKAKAAAACgAAAAAAAygAAAAFAUAAAAFAAAAAAABcBAAAABQUAAAAFAAAAAAABTACAAAAKKAA
        AACgAAAAAABQwAIAAAClAAAABQAKQAAAAFAwABAAAoKAAAAFAAKBAAAAoAwAAAAKAAAAACgAFACAAAoA
        MAACgAAAAAACgABQACAAoADAABQAAAAAABQAAUAACAoAAwAAoAAAAAAAoAAFAAAAAADAAKAAAAAAAKAA
        AUAAAAAAMABQAAAAAABQAABQAAAAAAwAKAAAAAAAUAAAFAAAAAADABQAAAAAACgAAAUAAAAAAMAKAAAA
        AAAUAAABQAAAAAAwCgAAAAAAFAAAAFAAAAAADAUAAAAAAAoAAAAUAAAAAAMCgAAAAAAFUgAAAFAAAAAA
        DBQAAAAAACiggAABQAAAAAAxQAAAAAABQoAgAAUAAAAAAMgAAAAAACgUACAAUAAAAAAMgAAAAAAFAUAA
        QAUAAAAAAMgAAAAAAUAKAABAUAAAAAAMgAAAAAAoAKAAABYAAAAAAMgAAAAABQAKAAABQACAAAAMgAAA
        AACgAFAAABQAAAAQAMgAAAAAFAAFAAABQAAAABAMgAAAAAKAACgAABQAAAAAgMgAAAAAUAACgAAAoAAA
        AAQMgAAAAAoAACgAAAoAAAAAEMgAAAABQAAFAAAAoAAAAACMgAAAACgAAKAAAAoAAAAABMgAAAAFAAAo
        AAAAoAAAAAAwAAAAFAAAFAAAABQAAAAADAAAABQAAAoAAAAFAAAAAAMAAAAUAAAFAAAAAUAAAAAA/8QA
        FgEBAQEAAAAAAAAAAAAAAAAAAAEC/9oACAEDEAAAAMgAAIAAAEAQAABQIAAoAAABaAABAAAAgBAAAAAA
        AUAAAA0AABAAABABAAABFAAAoAAAClAAIAAAIAEAAAQKAABQAAATQUACAAAEABAAAIAoAAKAAAg0AoBA
        AAEAAQAAEACgABQAAgNABQQAACAAEAAEAACgAKAAgE2ABSAAAQAAQAAgAAAoAUAIATYAABAAEoABAAIA
        AAAKAoCABNgACAAAQoAEABAAAAACiggAI2AAgAABBQAQAIAAAAABSoAAjYAEAAAEBQBACAAAAAAAUAAj
        YAIAAAEAoBAEAAAAAAAUABDYAQAAAEAKBAQAAAAAAAKABDYAgAAAEAFBAgAAAAAAAKACDYCAAAAEABRB
        AAAAAAAAFACDYEAAAAEAApEAAAAAAAAFACDYIAAAAEAACAAAAAAAAAoBA2EAAAABAACAAAAAAAAAFAQN
        kAAAAAgABAAAAAAAAABQEDaAAAAAIAAgAAAAAAAAAKCA3AAAAACAAQAAAAAAAAACggNAAAAACAAgAAAA
        AAAAABRANAAAAACABAAAAAAAAAABRANAAAAACACAAAAAAAAAAApANAAAAACAEAAAAACAUAAACoA0AAAA
        AIAgAAAAAQAAAKAFgDQAAAAAgEAAAAACAAAAABQDQAAAAAgIAAAAACAAAAAAoDQAAAAAgQAAAAAEAAAA
        AAoDQAAAAAggAAAAAIAAAAAAUDQAAAAAhAAAAAAQAAAAAAUDQAAAAAiACgEAABAAAAAABQNAAAAACQoA
        AgAAIAAAAAACg0AAAAAQAABAAAQAAAAAACg0AAAAAIAAEAAAQAAAAAABQ0AAAAAIAAIAAAQAAAAAABQ0
        AAAAAEAAQAAAIAAAAAABQ//EAB0QAAIDAQEBAQEAAAAAAAAAAAERAFBgQDBwIBD/2gAIAQEAAT8A+PuO
        P5K8E44/lbvifmLvn9uJ+3k/MXevQuPIO9J0DyTvXn38PJz7+IE8zxD8Ti3ePOuPKu8JzjjyzvHTO1cf
        scQbwnNvIOMRiOOOOMxmO7JsXUviNk4xGIxHHHHGYzHhnHmXyGlYjEcccccZjMZyZOZdwTnicu4+c0RN
        c695dx3ROdJxb83HfGwdU8q+095P5OYJpjXu9dy6QmnNa6A9xOcdSax0JpDTngfcTVGqd8/E05rXVmod
        IesmxPG+gmtNO78myNUTXGldMcaah2Bo3UHofqag05NiaFx4An2OOdkaB1R5yci/InJOsOxJyLwT4Thn
        +HHkXXHkJ4jiSci8GTmyf48c7E8bzZOPcdkeF8pw783hHhCeY4Z8DvnangJ+UvDPAnUPCvBnTO5PqT1G
        qN4+w+j+GHAPoPm7s5I5g+LvTkjmD+3pjtn6n8uO/NQfgZ/D+2H+P7cTHgzUH4C/6dYd648Sfkbxp+Pv
        zOuO0eScdSdg8q/jDyz/AG8kfJ2b5jg34v3eCPiTYOPNPrfIa0+BNc84+B44/smreffE/d3x/RNS6E37
        5X7vBE07h0DtTZE05OgfY+s2JNOToH3P3d2TizduwdyTTE0punSvmNeTTE59075TTOOOOOqJzzuXQuOO
        P4i8k4447wmpNo8S44448KTnXXHkcceOecfxJ5x2J/n/xAAUEQEAAAAAAAAAAAAAAAAAAADA/9oACAEC
        AQE/AA6H/8QAFBEBAAAAAAAAAAAAAAAAAAAAwP/aAAgBAwEBPwAOh//Z
</value>
  </data>
</root>